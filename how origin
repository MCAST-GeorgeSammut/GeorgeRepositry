[33mcommit cbf113ae5a6f46e056eef6a68395bd267ed295f0[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Gerard Said <gerard.said@mcast.edu.mt>
Date:   Tue Nov 24 11:43:38 2020 +0100

    Initial commit

[1mdiff --git a/AstarPathfindingProject.meta b/AstarPathfindingProject.meta[m
[1mnew file mode 100644[m
[1mindex 0000000..0021d67[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject.meta[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mfileFormatVersion: 2[m
[32m+[m[32mguid: 33f80ea0518824d999cbbdd7c607ab9e[m
[32m+[m[32mfolderAsset: yes[m
[32m+[m[32mDefaultImporter:[m
[32m+[m[32m  externalObjects: {}[m
[32m+[m[32m  userData:[m[41m [m
[32m+[m[32m  assetBundleName:[m[41m [m
[32m+[m[32m  assetBundleVariant:[m[41m [m
[1mdiff --git a/AstarPathfindingProject/AstarPathfindingProject.asmdef b/AstarPathfindingProject/AstarPathfindingProject.asmdef[m
[1mnew file mode 100644[m
[1mindex 0000000..96b5a01[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject/AstarPathfindingProject.asmdef[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "name": "AstarPathfindingProject",[m
[32m+[m[32m    "references": [],[m
[32m+[m[32m    "optionalUnityReferences": [],[m
[32m+[m[32m    "includePlatforms": [],[m
[32m+[m[32m    "excludePlatforms": [],[m
[32m+[m[32m    "allowUnsafeCode": false[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/AstarPathfindingProject/AstarPathfindingProject.asmdef.meta b/AstarPathfindingProject/AstarPathfindingProject.asmdef.meta[m
[1mnew file mode 100644[m
[1mindex 0000000..841e06d[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject/AstarPathfindingProject.asmdef.meta[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mfileFormatVersion: 2[m
[32m+[m[32mguid: efa45043feb7e4147a305b73b5cea642[m
[32m+[m[32mAssemblyDefinitionImporter:[m
[32m+[m[32m  externalObjects: {}[m
[32m+[m[32m  userData:[m[41m [m
[32m+[m[32m  assetBundleName:[m[41m [m
[32m+[m[32m  assetBundleVariant:[m[41m [m
[1mdiff --git a/AstarPathfindingProject/Behaviors.meta b/AstarPathfindingProject/Behaviors.meta[m
[1mnew file mode 100644[m
[1mindex 0000000..b08d303[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject/Behaviors.meta[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mfileFormatVersion: 2[m
[32m+[m[32mguid: 933eacfdb8adf4750a0ee0f592003130[m
[32m+[m[32mfolderAsset: yes[m
[32m+[m[32mDefaultImporter:[m
[32m+[m[32m  externalObjects: {}[m
[32m+[m[32m  userData:[m[41m [m
[32m+[m[32m  assetBundleName:[m[41m [m
[32m+[m[32m  assetBundleVariant:[m[41m [m
[1mdiff --git a/AstarPathfindingProject/Behaviors/AIDestinationSetter.cs b/AstarPathfindingProject/Behaviors/AIDestinationSetter.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..1fd9af6[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject/Behaviors/AIDestinationSetter.cs[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32musing UnityEngine;[m
[32m+[m[32musing System.Collections;[m
[32m+[m
[32m+[m[32mnamespace Pathfinding {[m
[32m+[m	[32m/// <summary>[m
[32m+[m	[32m/// Sets the destination of an AI to the position of a specified object.[m
[32m+[m	[32m/// This component should be attached to a GameObject together with a movement script such as AIPath, RichAI or AILerp.[m
[32m+[m	[32m/// This component will then make the AI move towards the <see cref="target"/> set on this component.[m
[32m+[m	[32m///[m
[32m+[m	[32m/// See: <see cref="Pathfinding.IAstarAI.destination"/>[m
[32m+[m	[32m///[m
[32m+[m	[32m/// [Open online documentation to see images][m
[32m+[m	[32m/// </summary>[m
[32m+[m	[32m[UniqueComponent(tag = "ai.destination")][m
[32m+[m	[32m[HelpURL("http://arongranberg.com/astar/docs/class_pathfinding_1_1_a_i_destination_setter.php")][m
[32m+[m	[32mpublic class AIDestinationSetter : VersionedMonoBehaviour {[m
[32m+[m		[32m/// <summary>The object that the AI should move to</summary>[m
[32m+[m		[32mpublic Transform target;[m
[32m+[m		[32mIAstarAI ai;[m
[32m+[m
[32m+[m		[32mvoid OnEnable () {[m
[32m+[m			[32mai = GetComponent<IAstarAI>();[m
[32m+[m			[32m// Update the destination right before searching for a path as well.[m
[32m+[m			[32m// This is enough in theory, but this script will also update the destination every[m
[32m+[m			[32m// frame as the destination is used for debugging and may be used for other things by other[m
[32m+[m			[32m// scripts as well. So it makes sense that it is up to date every frame.[m
[32m+[m			[32mif (ai != null) ai.onSearchPath += Update;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mvoid OnDisable () {[m
[32m+[m			[32mif (ai != null) ai.onSearchPath -= Update;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m/// <summary>Updates the AI's destination every frame</summary>[m
[32m+[m		[32mvoid Update () {[m
[32m+[m			[32mif (target != null && ai != null) ai.destination = target.position;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/AstarPathfindingProject/Behaviors/AIDestinationSetter.cs.meta b/AstarPathfindingProject/Behaviors/AIDestinationSetter.cs.meta[m
[1mnew file mode 100644[m
[1mindex 0000000..e63d0e6[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject/Behaviors/AIDestinationSetter.cs.meta[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mfileFormatVersion: 2[m
[32m+[m[32mguid: c9679e68a0f1144e79c664d9a11ca121[m
[32m+[m[32mtimeCreated: 1495015523[m
[32m+[m[32mlicenseType: Pro[m
[32m+[m[32mMonoImporter:[m
[32m+[m[32m  serializedVersion: 2[m
[32m+[m[32m  defaultReferences: [][m
[32m+[m[32m  executionOrder: 0[m
[32m+[m[32m  icon: {instanceID: 0}[m
[32m+[m[32m  userData:[m[41m [m
[32m+[m[32m  assetBundleName:[m[41m [m
[32m+[m[32m  assetBundleVariant:[m[41m [m
[1mdiff --git a/AstarPathfindingProject/Behaviors/Patrol.cs b/AstarPathfindingProject/Behaviors/Patrol.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..1a8d913[m
[1m--- /dev/null[m
[1m+++ b/AstarPathfindingProject/Behaviors/Patrol.cs[m
[36m@@ -0,0 +1,59 @@[m
[32m+[m[32musing UnityEngine;[m
[32m+[m[32musing System.Collections;[m
[32m+[m
[32m+[m[32mnamespace Pathfinding {[m
[32m+[m	[32m/// <summary>[m
[32m+[m	[32m/// Simple patrol behavior.[m
[32m+[m	[32m/// This will set the destination on the agent so that it moves through the sequence of objects in the <see cref="targets"/> array.[m
[32m+[m	[32m/// Upon reaching a target it will wait for <see cref="delay"/> seconds.[m
[32m+[m	[32m///[m
[32m+[m	[32m/// See: <see cref="Pathfinding.AIDestinationSetter"/>[m
[32m+[m	[32m/// See: <see cref="Pathfinding.AIPath"/>[m
[32m+[m	[32m/// See: <see cref="Pathfinding.RichAI"/>[m
[32m+[m	[32m/// See: <see cref="Pathfinding.AILerp"/>[m
[32m+[m	[32m/// </summary>[m
[32m+[m	[32m[UniqueComponent(tag = "ai.destination")][m
[32m+[m	[32m[HelpURL("http://arongranberg.com/astar/docs/class_pathfinding_1_1_patrol.php")][m
[32m+[m	[32mpublic class Patrol : VersionedMonoBehaviour {[m
[32m+[m		[32m/// <summary>Target points to move to in order</summary>[m
[32m+[m		[32mpublic Transform[] targets;[m
[32m+[m
[32m+[m		[32m/// <summary>Time in seconds to wait at each target</summary>[m
[32m+[m		[32mpublic float delay = 0;[m
[32m+[m
[32m+[m		[32m/// <summary>Current target index</summary>[m
[32m+[m		[32mint index;[m
[32m+[m
[32m+[m		[32mIAstarAI agent;[m
[32m+[m		[32mfloat switchTime = float.PositiveInfinity;[m
[32m+[m
[32m+[m		[32mprotected override void Awake () {[m
[32m+[m			[32mbase.Awake();[m
[32m+[m			[32magent = GetComponent<IAstarAI>();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m/// <summary>Update is called once per frame</summary>[m
[32m+[m		[32mvoid Update () {[m
[32m+[m			[32mif (targets.Length == 0) return;[m
[32m+[m
[32m+[m			[32mbool search = false;[m
[32m+[m
[32m+[m			[32m// Note: using reachedEndOfPath and pathPending instead of reachedDestination here because[m
[